{"version":3,"sources":["components/CrystalBall.js","components/Cloud.js","components/Fortune.js","App.js","index.js"],"names":["CrystalBall","props","onClick","fortuneGen","cloudPart","width","height","cx","cy","r","fill","d","Cloud","className","style","boxShadow","cloudX","ref","cloudRef","id","type","baseFrequency","numOctaves","in","scale","Fortune","useState","fortunes","setFortunes","fortBeg","setFortBeg","fortMid","setFortMid","fortEnd","setFortEnd","leftRef","useRef","rightRef","useEffect","fetch","then","result","json","data","text","getRandomInt","cloudLX","cloudRX","gsap","to","current","x","max","Math","floor","random","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8KAEe,SAASA,EAAYC,GAGlC,OACE,qBACEC,QAAS,WACPD,EAAME,aACNF,EAAMG,WAAW,IAAK,MAH1B,SAOE,sBAAKC,MAAM,MAAMC,OAAO,MAAxB,UACE,wBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMC,KAAK,YACvC,sBAAMC,EAAE,4BAA4BD,KAAK,e,KCZlC,SAASE,EAAMX,GAC5B,OACE,gCAEE,qBACEY,UAAU,eACVC,MAAO,CAAEC,UAAU,GAAD,OAAKd,EAAMe,OAAX,2BAClBC,IAAKhB,EAAMiB,WAGb,qBAAKb,MAAM,IAAIC,OAAO,IAAtB,SACE,yBAAQa,GAAG,SAAX,UACE,8BACEC,KAAK,eACLC,cAAc,MACdC,WAAW,OAGb,mCAAmBC,GAAG,gBAAgBC,MAAM,eChBvC,SAASC,EAAQxB,GAE9B,MAAgCyB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,iBAAO,MACjBC,EAAWD,iBAAO,MAYxB,OATAE,qBAAU,WACRC,MAAM,yBACHC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GACLf,EAAYe,QAEf,IAID,gCACE,cAAC3C,EAAD,CACEG,WAkBN,WACE2B,EAAWH,EAAS,GAAGiB,KAAKC,EAAa,KACzCb,EAAWL,EAAS,GAAGiB,KAAKC,EAAa,KACzCX,EAAWP,EAAS,GAAGiB,KAAKC,EAAa,MApBrCzC,UA4BN,SAA4B0C,EAASC,GACnCC,IAAKC,GAAGd,EAAQe,QAAS,CAAEC,EAAGL,IAC9BE,IAAKC,GAAGZ,EAASa,QAAS,CAAEC,EAAGJ,OA5B7B,qBAAK5B,GAAG,UAAR,SAEE,8BACGU,EAAU,IACVE,EAAU,IACVE,OAGL,cAACrB,EAAD,CAAOI,OAAO,KAAKE,SAAUiB,IAC7B,cAACvB,EAAD,CAAOI,OAAO,KAAKE,SAAUmB,OAYjC,SAASQ,EAAaO,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,ICjDvB,SAASI,IACtB,OACE,qBAAK3C,UAAU,MAAf,SACE,cAACY,EAAD,MCFN,IAAMgC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,I","file":"static/js/main.975682ff.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function CrystalBall(props) {\r\n  //the crytal ball is just a circle for now, but we'll be adding some sort of flash or smoke animation later to make it look nice.\r\n  //Clicking on the crystal ball will run the generateFortune function that was passed up, and display your fortune. As mentioned, we'll tie an animation to this later.\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.fortuneGen();\r\n        props.cloudPart(-250, 250);\r\n      }}\r\n    >\r\n      {/* Creating the crystal ball & glint */}\r\n      <svg width=\"200\" height=\"200\">\r\n        <circle cx=\"100\" cy=\"100\" r=\"100\" fill=\"#D4F4F2\" />\r\n        <path d=\"M 10 100 Q 20 20 100 10 Z\" fill=\"white\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../styles.css\";\r\n\r\nexport default function Cloud(props) {\r\n  return (\r\n    <div>\r\n      {/* This is for styling the clouds */}\r\n      <div\r\n        className=\"cloud-circle\"\r\n        style={{ boxShadow: `${props.cloudX}vw 450px 60px 0px #fff` }}\r\n        ref={props.cloudRef}\r\n      ></div>\r\n      {/* This is for creating the clouds  */}\r\n      <svg width=\"0\" height=\"0\">\r\n        <filter id=\"filter\">\r\n          <feTurbulence\r\n            type=\"fractalNoise\"\r\n            baseFrequency=\".01\"\r\n            numOctaves=\"10\"\r\n          />\r\n          {/* {This filter the frequency graphic for SVG} */}\r\n          <feDisplacementMap in=\"SourceGraphic\" scale=\"10\" />\r\n        </filter>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\n//style={{box-shadow: 400px 450px 60px 0px #fff}}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport CrystalBall from \"./CrystalBall\";\r\nimport Cloud from \"./Cloud\";\r\n\r\nexport default function Fortune(props) {\r\n  //states to hold current fortune pieces, and the fortune JSON data\r\n  const [fortunes, setFortunes] = useState([]);\r\n  const [fortBeg, setFortBeg] = useState(\"\");\r\n  const [fortMid, setFortMid] = useState(\"\");\r\n  const [fortEnd, setFortEnd] = useState(\"\");\r\n  //States to hold the clouds apart\r\n  const leftRef = useRef(null);\r\n  const rightRef = useRef(null);\r\n\r\n  //fetches JSON data\r\n  useEffect(() => {\r\n    fetch(\"data/fortuneText.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setFortunes(data);\r\n      });\r\n  }, []);\r\n\r\n  //returns the three text pieces, initially displaying nothing, and the crystal ball image. Passes the fortuneGenerate up to the ball object\r\n  return (\r\n    <div>\r\n      <CrystalBall\r\n        fortuneGen={fortuneGenerate}\r\n        cloudPart={cloudAnimationPart}\r\n      />\r\n      <div id=\"message\">\r\n        {/* fetch JSON text message in one from three parts */}\r\n        <p>\r\n          {fortBeg + \" \"}\r\n          {fortMid + \" \"}\r\n          {fortEnd}\r\n        </p>\r\n      </div>\r\n      <Cloud cloudX=\"45\" cloudRef={leftRef} />\r\n      <Cloud cloudX=\"70\" cloudRef={rightRef} />\r\n    </div>\r\n  );\r\n\r\n  //adds the text for the fortunes to the screen.\r\n  //Right now it will always fetch element 0 of the text array, but in future it will use Math.random() to randomize the text displayed.\r\n  function fortuneGenerate() {\r\n    setFortBeg(fortunes[0].text[getRandomInt(7)]);\r\n    setFortMid(fortunes[1].text[getRandomInt(7)]);\r\n    setFortEnd(fortunes[2].text[getRandomInt(7)]);\r\n  }\r\n  //Retrieves random messages\r\n  function getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\n  //this animation pull the clouds apart to show the text message\r\n  function cloudAnimationPart(cloudLX, cloudRX) {\r\n    gsap.to(leftRef.current, { x: cloudLX });\r\n    gsap.to(rightRef.current, { x: cloudRX });\r\n  }\r\n}\r\n","import Fortune from \"./components/Fortune\";\nimport Cloud from \"./components/Cloud\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Fortune />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}